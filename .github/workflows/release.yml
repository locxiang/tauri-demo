name: "publish"

on:
  push:
    tags:
      - v*.*.*
  workflow_dispatch:

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest"
            args: "--target aarch64-apple-darwin"
          # Uncomment for Intel builds
          #   - platform: 'macos-latest' # for Intel based macs.
          #     args: '--target x86_64-apple-darwin'
          # - platform: "ubuntu-24.04"
          #   args: ""
          - platform: "windows-latest"
            args: ""

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4.2.2

      - name: Install pnpm + deps
        uses: pnpm/action-setup@v4.1.0
        with:
          version: 10
          run_install: true

      - name: Use Node.js
        uses: actions/setup-node@v4.4.0
        with:
          node-version: 22
          cache: "pnpm"

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Install dependencies (Windows only)
        if: matrix.platform == 'windows-latest'
        run: |
            # 设置 PowerShell 执行策略
            Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser -Force
            
            # 下载并安装 npcap SDK
            Write-Host "Installing npcap SDK..." -ForegroundColor Yellow
            $npcapSdkUrl = "https://npcap.com/dist/npcap-sdk-1.15.zip"
            $npcapSdkPath = "$env:TEMP\npcap-sdk.zip"
            try {
              Invoke-WebRequest -Uri $npcapSdkUrl -OutFile $npcapSdkPath -UseBasicParsing
              
              # 解压 SDK
              Expand-Archive -Path $npcapSdkPath -DestinationPath "$env:TEMP\npcap-sdk" -Force
              
              # 创建目录并复制库文件
              $sdkLibPath = "$env:TEMP\npcap-sdk\Lib\x64"
              $sdkIncludePath = "$env:TEMP\npcap-sdk\Include"
              
              if (Test-Path $sdkLibPath) {
                # 设置环境变量
                echo "LIB=$env:LIB;$sdkLibPath" >> $env:GITHUB_ENV
                echo "INCLUDE=$env:INCLUDE;$sdkIncludePath" >> $env:GITHUB_ENV
                echo "NPCAP_SDK_PATH=$env:TEMP\npcap-sdk" >> $env:GITHUB_ENV
                Write-Host "npcap SDK installed successfully" -ForegroundColor Green
              } else {
                Write-Host "Warning: npcap SDK extraction failed" -ForegroundColor Yellow
              }
            } catch {
              Write-Host "Warning: Failed to install npcap SDK: $($_.Exception.Message)" -ForegroundColor Yellow
            }
            
            # 设置静态链接环境变量
            echo "RUSTFLAGS=-C target-feature=+crt-static" >> $env:GITHUB_ENV
            
            # 显示环境信息
            Write-Host "Environment setup completed" -ForegroundColor Green
            Write-Host "Rust version:" -ForegroundColor Blue
            rustc --version
            Write-Host "Cargo version:" -ForegroundColor Blue
            cargo --version
  

          
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-24.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - uses: tauri-apps/tauri-action@action-v0.5.20
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: "v__VERSION__"
          releaseBody: "Note: macOS builds are not signed so in order to run the app, after moving the app to Applications folder you need to run xattr -c /Applications/tauri-app.app in the terminal. (See tauri-apps/tauri-action#919) See [CHANGES.md](https://github.com/Uninen/tauri-vue-template/blob/main/CHANGES.md) for a complete list of changes."
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
